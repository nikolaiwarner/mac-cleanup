before:
  hooks:
    # The build is done in this particular way to build Caddy in a designated directory named in .gitignore.
    # This is so we can run goreleaser on tag without Git complaining of being dirty. The main.go in cmd/caddy directory
    # cannot be built within that directory due to changes necessary for the build causing Git to be dirty, which
    # subsequently causes gorleaser to refuse running.
    - mkdir -p caddy-build
    - cp cmd/caddy/main.go caddy-build/main.go
    - cp ./go.mod caddy-build/go.mod
    - sed -i.bkp 's|github.com/caddyserver/caddy/v2|caddy|g' ./caddy-build/go.mod
    # GoReleaser doesn't seem to offer {{.Tag}} at this stage, so we have to embed it into the env
    # so we run: TAG=$(git describe --abbrev=0) goreleaser release --rm-dist --skip-publish --skip-validate
    - go mod edit -require=github.com/caddyserver/caddy/v2@{{.Env.TAG}} ./caddy-build/go.mod
    # as of Go 1.16, `go` commands no longer automatically change go.{mod,sum}. We now have to explicitly
    # run `go mod tidy`. The `/bin/sh -c '...'` is because goreleaser can't find cd in PATH without shell invocation.
    - /bin/sh -c 'cd ./caddy-build && go mod tidy'
    - git clone --depth 1 https://github.com/caddyserver/dist caddy-dist
    - go mod download

builds:
- env:
  - CGO_ENABLED=0
  - GO111MODULE=on
  main: main.go
  binary: mac-cleanup
  goos:
  - darwin
  goarch:
  - amd64
  - arm
  - arm64
  - s390x
  - ppc64le
  goarm:
  - 5
  - 6
  - 7
  ignore:
    - goos: darwin
      goarch: arm
    - goos: darwin
      goarch: ppc64le
    - goos: darwin
      goarch: s390x
  flags:
  - -trimpath
  ldflags:
  - -s -w

archives:
  - format_overrides:
    replacements:
      darwin: mac
checksum:
  algorithm: sha512

release:
  github:
    owner: mac-cleanup
    name: mac-cleanup
  draft: true
  prerelease: auto

changelog:
  sort: asc
  filters:
    exclude:
    - '^chore:'
    - '^ci:'
    - '^docs?:'
    - '^readme:'
    - '^tests?:'
    - '^\w+\s+'
